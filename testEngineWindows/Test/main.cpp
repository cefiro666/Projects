#include "pch.h"
#include "Test.h"
#include "Engine.h"
#include <Windows.h>

using namespace std;

int main()
{
	//установка параметров локали (только для windows)
	SetConsoleCP(1251);
	SetConsoleOutputCP(1251);

	cout << "\n	Программа тестирования\n";
	cout << " =====================================\n\n";

	cout << " Введите температуру окружающей\n среды (в градусах цельсия): ";
	float temp;
	cin >> temp;

	// создаем двигатель
	Engine int_comb_engine;

	// Входные данные
	// ======================================================
	// установка типа двигателя (внутр. сгорания)
	int_comb_engine.type = 1;

	// температура окружающей среды
	int_comb_engine.medium_temp = temp;

	// температура двигателя (равна температуре окр. среды)
	int_comb_engine.engine_temp = int_comb_engine.medium_temp;

	// коэффициент зависимости скорости нагрева от крутящего момента
	int_comb_engine.coef_M = 0.01F;

	// коэффициент зависимости скорости нагрева от скорости 
	// вращения коленвала
	int_comb_engine.coef_rotat_speed = 0.0001F;

	// коэффициент зависимости скорости охлаждения от температуры 
	// двигателя и окружающей среды
	int_comb_engine.C = 0.1F;

	// начальная скорость вращения вала
	int_comb_engine.rotat_speed = 0;

	// установка времени на ноль
	int_comb_engine.engine_time = 0;

	// момент инерции двигателя
	int_comb_engine.I = 10;

	// температура перегрева двигателя
	int_comb_engine.temp_overheat = 110;

	// зависимость крутящего момента от скорости вращения вала
	// (при добавлении или удалении точек зависимости необходимо
	// исправить код в классе Engine(изменить массив и рассчет М))
	int_comb_engine.M_arr =           { 20, 75, 100, 105,  75,   0 };
	int_comb_engine.rotat_speed_arr = { 0,  75, 150, 200,  250, 300 };

	// ======================================================

	// запуск теста
	// ======================================================
	// узнаем время работы двигателя до остановки, причину остановки
	// и критические данные в момент остановки
	overheating_time(int_comb_engine);

	cout << "\n Работа программы завершена. Нажмите Enter для выхода...";
	cin.get();
	cin.get();
}
